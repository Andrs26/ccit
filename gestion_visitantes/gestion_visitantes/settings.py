"""
Django settings for gestion_visitantes project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-q8gu)vboehx(0lktiyf^@tterd%xyh34la9o(y!tp%e@idzowz'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'axes',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Aplicaciones del sistema
    'visitantes',
    'eventos',
    'pases',
    'usuarios',
    'lista_negra',
    'pertenencias',
    'colaboradores',
]

MIDDLEWARE = [
    'axes.middleware.AxesMiddleware', 
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'gestion_visitantes.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR.joinpath('templates')
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'visitantes.context_processors.grupos_usuario',
            ],
        },
    },
]

WSGI_APPLICATION = 'gestion_visitantes.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {'min_length': 8},
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'es-es'

TIME_ZONE = 'America/Tegucigalpa'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files
# URL que manejará la carga de los archivos estáticos
STATIC_URL = '/static/'

# Directorios adicionales donde Django buscará archivos estáticos
STATICFILES_DIRS = [
    BASE_DIR / "static",  # Para archivos estáticos globales
]

# Ruta donde se recopilarán todos los archivos estáticos cuando ejecutes 'collectstatic'
STATIC_ROOT = BASE_DIR / "staticfiles"

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

from django.contrib.messages import constants as messages

MESSAGE_TAGS = {
    messages.DEBUG: 'debug',
    messages.INFO: 'info',
    messages.SUCCESS: 'success',
    messages.WARNING: 'warning',
    messages.ERROR: 'error',
}

# URL de redirección después del login/logout
LOGIN_REDIRECT_URL = 'inicio'
LOGOUT_REDIRECT_URL = 'login'

# Seguridad de autenticación
#SESSION_COOKIE_SECURE = True   # Solo transmitir cookies por HTTPS
#CSRF_COOKIE_SECURE = True      # Requerir HTTPS para CSRF
SECURE_BROWSER_XSS_FILTER = True  # Protección contra ataques XSS
SECURE_CONTENT_TYPE_NOSNIFF = True  # Protección contra inyección de archivos

# Número de intentos antes de bloquear el login
AUTHENTICATION_BACKENDS = [
    'axes.backends.AxesBackend',
    'django.contrib.auth.backends.ModelBackend',
]

# Bloquear por combinación de usuario e IP
AXES_LOCK_OUT_BY_COMBINATION_USER_AND_IP = True

# Número máximo de intentos fallidos antes del bloqueo
AXES_FAILURE_LIMIT = 5  

# Tiempo de bloqueo en horas (ejemplo: 1 hora = 1)
AXES_COOLOFF_TIME = 1  

# Tiempo de bloqueo en segundos (1 hora)
LOCKOUT_TIME = 300

# Almacenar intentos fallidos en la base de datos y en la caché
AXES_USE_CACHE = True

# Configuración de caché (usará Redis si está configurado)
AXES_CACHE = 'default'

AXES_RESET_ON_SUCCESS = True  # Reinicia intentos fallidos tras un login exitoso

LOGIN_URL = '/login/' 

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587  # Puerto para TLS
EMAIL_USE_TLS = True # Habilita TLS
EMAIL_USE_SSL = False
EMAIL_HOST_USER = 'andres26romero98@gmail.com'  # Reemplaza con tu correo
EMAIL_HOST_PASSWORD = 'bbbe mqku eqma nkgg'    # Usa una contraseña de aplicación si usas 2FA
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER